{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","defaultProps","propType","PropTypes","string","isRequired","node","Statistics","good","neutral","bad","total","positivePercentage","statistics","list","list_item","positive","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","btn","arrayOf","func","Notification","message","message_notification","App","useState","setGood","setNeutral","setBad","totalFeedback","Math","round","Object","keys","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c3e5ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__5NKKK\",\"list\":\"Statistics_list__26sc3\",\"list_item\":\"Statistics_list_item__1cCvC\",\"total\":\"Statistics_total__zS0BB\",\"positive\":\"Statistics_positive__3Gq-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__25Y9M\",\"title\":\"Section_title__2_UeO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2ZHrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_notification\":\"Notification_message_notification__35kCu\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: 'Please leave feedback',\n};\n\nSection.propType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className={s.statistics}>\n      <ul className={s.list}>\n        <li className={s.list_item}>Good: {good}</li>\n        <li className={s.list_item}>Neutral: {neutral}</li>\n        <li className={s.list_item}>Bad: {bad}</li>\n      </ul>\n      <p className={s.total}>Total: {total}</p>\n      <p>\n        <span className={s.positive}>Positive feedback: </span>\n        {positivePercentage}%\n      </p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport function FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <button\n      type=\"button\"\n      key={option}\n      onClick={() => onLeaveFeedback(option)}\n      className={s.btn}\n    >\n      {option}\n    </button>\n  ));\n}\n\nFeedbackOptions.propType = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport function Notification({ message }) {\n  return <p className={s.message_notification}>{message}</p>;\n}\n\nNotification.defaultProps = {\n  message: 'No feedback given',\n};\n\nNotification.propType = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport { Section } from \"./components/Section/Section\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\nimport { FeedbackOptions } from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { Notification } from \"./components/Notification/Notification\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((prev) => prev + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prev) => prev + 1);\n        break;\n\n      case \"bad\":\n        setBad((prev) => prev + 1);\n        break;\n\n      default:\n    }\n  };\n\n  const totalFeedback = () => {\n    let total = good + bad + neutral;\n    return total;\n  };\n\n  const positiveFeedbackPercentage = () => {\n    let positiveFeedback = Math.round((good / totalFeedback()) * 100) || 0;\n    return positiveFeedback;\n  };\n\n  const total = totalFeedback();\n  const positive = positiveFeedbackPercentage();\n\n  return (\n    <div className=\"container\">\n      <Section>\n        <FeedbackOptions\n          options={Object.keys({ good, neutral, bad })}\n          onLeaveFeedback={addFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positive}\n          ></Statistics>\n        ) : (\n          <Notification />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}